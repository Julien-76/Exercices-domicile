Debut 6.1
	Déclarations variables
		var texte :T <- ""
		var carac :C <- ''
		var position :N <- 1
		var test :B <- faux
	Fin déclaration variables
	afficher "Entre un texte"
	saisir texte
	afficher "Entre un caractère"
	saisir carac
	tant que test = faux et pos <= longueur (texte)
		si caract(texte, position) = carac
			alors
			test = vrai
			afficher "Le caractère se trouve à la position", position
			sinon
			pos <- pos + 1
		fin si
	fin tant que
	si test = faux
		alors
		afficher "pas là"
	fin si
Fin 6.1

Debut 6.1.2
	Déclarations variables
		var texte :T <- ""
		var carac :C <- ''
		var pos :N <- 0
		var posFin :N <- 0
	Fin déclaration variables
	afficher "Entre un texte"
	saisir texte
	afficher "Entre un caractère"
	saisir carac
	Pour pos allant de 1 à longueur(texte) par pas de 1
		si caract(texte, position) = carac
			posFin <- pos
		fin si
	pos suivant
	si posFin = 0
		alors
		afficher "Le caractère n'apparaît pas"
		sinon
		afficher "La dernière position du caractère est : ", posFin
	fin si
Fin 6.1.2

Debut 6.1.3
	Déclarations variables
		var texte :T <- ""
		var carac :C <- ''
		var pos :N <- 0
		var posFin :N <- 0
		var apparitions :N <- 0
	Fin déclaration variables
	afficher "Entre un texte"
	saisir texte
	afficher "Entre un caractère"
	saisir carac
	Pour pos allant de 1 à longueur(texte) par pas de 1
		si caract(texte, position) = carac
			apparitions = apparitions + 1
		fin si
	pos suivant
	afficher "Le caractère apparaît ", apparitions, " fois"
	si apparitions = 0
		alors
		afficher "pas là"
	fin si
Fin 6.1.3

Debut 6.2.1
	Déclaration des variables
		var texte :T <- ""
		var scan :T <- ""
		var debut :N <- 1
		var final :N <- 1
		var test = faux
	Fin déclarations variables
	afficher "Entre un texte"
	saisir texte
	afficher "Entre un texte à rechercher dans ton premier texte"
	saisir scan
	tant que longueur(scan) > longueur(texte)
		afficher "Impossible, texte plus grand que l'original
		afficher "Entre un texte"
		saisir texte
		afficher "Entre un texte à rechercher dans ton premier texte"
		saisir scan
	fin tant que
	final = longueur(scan)
	tant que test = faux et final <= longueur(texte)
		si scan = sousChaine(texte, debut, fin)
			alors
			test = vrai
			sinon
			debut <- debut + 1
			final <- final + 1
		fin si
	fin tant que
	afficher "Le texte apparaît pour la première fois à partir de la
	position ", debut
Fin 6.2.1

Debut 6.2.2
Déclaration des variables
		var texte :T <- ""
		var scan :T <- ""
		var debut :N <- 1
		var final :N <- 1
		var test :N <- 0
	Fin déclarations variables
	afficher "Entre un texte"
	saisir texte
	afficher "Entre un texte à rechercher dans ton premier texte"
	saisir scan
	tant que longueur(scan) > longueur(texte)
		afficher "Impossible, texte plus grand que l'original
		afficher "Entre un texte"
		saisir texte
		afficher "Entre un texte à rechercher dans ton premier texte"
		saisir scan
	fin tant que
	final = longueur(scan)
	tant que final <= longueur(texte)
		si scan = sousChaine(texte, debut, fin)
			alors
			test <- debut
			sinon
			debut <- debut + 1
			final <- final + 1
		fin si
	fin tant que
	afficher "La chaine de caractère apparait la dernère fois à partir 
		  de la position", test
Fin 6.2.2

Debut 6.2.3
Déclaration des variables
		var texte :T <- ""
		var scan :T <- ""
		var debut :N <- 1
		var final :N <- 1
		var test :N <- 0
	Fin déclarations variables
	afficher "Entre un texte"
	saisir texte
	afficher "Entre un texte à rechercher dans ton premier texte"
	saisir scan
	tant que longueur(scan) > longueur(texte)
		afficher "Impossible, texte plus grand que l'original
		afficher "Entre un texte"
		saisir texte
		afficher "Entre un texte à rechercher dans ton premier texte"
		saisir scan
	fin tant que
	final = longueur(scan)
	tant que final <= longueur(texte)
		si scan = sousChaine(texte, debut, fin)
			alors
			test <- test + 1
			sinon
			debut <- debut + 1
			final <- final + 1
		fin si
	fin tant que
	afficher "La chaine de caractère apparait ", test, " fois"
Fin 6.2.3

Debut 6.4
	début déclaration variables
		var texte :T <- ""
		var debut :N <- 0
		var fin :N <- 0
	fin déclaration variables
	afficher "Entre un texte"
	saisir texte
	afficher "Choisi une position de départ"
	saisir debut
	tant que debut < 0
		afficher "choix incorrect
		saisir debut
	fin tant que
	afficher "Choisi une position de fin"
	saisir fin
	tant que fin > longueur(texte)
		afficher "choix incorrect"
		saisir fin
	fin tant que
	pour cpt allant de debut à fin-1
		afficher caract(texte, cpt)
	cpt suivant
Fin 6.4

Debut 6.5
	début déclaration variables
		var cpt :N <- 1
		var t1 :T <- ""
		var t2 :T <- ""
		var test :B <- faux
		var testEgal :B <- faux
	Fin déclarations variables
	afficher "saisi un texte"
	saisir t1
	afficher "saisi un autre texte"
	sasir t2
	tant que caract(t1, cpt) = caract(t2, cpt) et cpt < Longueur(t1) et cpt < Longueur(t2)		// On cherche là où est la différence entre 2 lettres
		cpt <- cpt + 1										// Il s'arrète quoi qu'il arrive à la dernière lettre du mot le plus petit
	fin tant que
	si caract(t1, cpt) > caract(t2,cpt)		// dernière comparaison avant de comparer les longueurs
		alors
		test <- vrai
	fin si
	si caract(t1, cpt) = caract(t2, cpt) et Longueur(t1) > Longueur(t2)
		alors
		test <- vrai
	fin si
	si test = faux
		alors
		afficher "FAUX"
		sinon
		afficher "VRAI"
	fin si
Fin 6.5
			
Debut 6.6
	début déclaration variables
		var cpt :N <- 1
		var texte :T <- ""
		var etxet :T <- ""
	fin déclaration variables
	afficher "Entre un texte, j'inverserai son sens"
	saisir texte
	pour cpt allant de Longueur(texte) à 1 par pas de -1	// autre possilité : pour cpt allant de 1 à Longueur(texte)
		etxet <- etxet + caract(texte, cpt)					etxet <- caract(texte, cpt) + etxet
	cpt suivant
	afficher etxet
Fin 6.6

Debut 6.7
	Début déclaration variables
		var pied :N <- 1
		var tete :N <- 1
		var t1 :T <- ""
		var t2 :T <- ""
	Fin déclaration variables				  t
	afficher "Entre un texte, j'inverserai les mots"	  p
	saisir t1						//salut ca va
	tant que tete <= Longueur(t1)
		tant que caract(t1, tete) =/= ' '
			tete <- tete + 1		  p    t
		fin tant que				//salut ca va
		t2 <- sousChaine(t1, pied, tete) + ' ' + t2			t
		tete <- tete + 1					        p
		pied <- tete						//salut ca va
	fin tant que
	t2 <- sousChaine(t2, 1, Longueur(t2))
	afficher t2
Fin 6.7

Debut 6.8
	Début déclaration variables
		var pied :N <- 1
		var tete :N <- 1
		var t1 :T <- ""
		var t2 :T <- ""
		var cpt :N <- 1
	fin déclaration variables
	afficher "Entre un texte, j'inverserai les lettres dans les mots"
	saisir t1
	tant que tete <= Longueur(t1)
		tant que caract(t1, tete) =/= ' '
			tete <- tete + 1
		fin tant que
		pour cpt allant de pied à tete
			mot <- caract(t1, cpt) + mot
		cpt suivant
		t2 <- mot + ' ' + t2
	fin tant que
	afficher t2
Fin 6.8














